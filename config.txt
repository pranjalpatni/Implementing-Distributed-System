#
# Configuration file for CS6378 Project 1
#
# As per the "shell" convention, anything following a hash sign is a comment and should be ignored. The 
# configuration file shall not exceed 100 Kb in size. The configuration file consists of 3 sections. Each section
# is delimited by one or more blank lines. The first section configures the number of nodes in the system. The
# second section configures the hostname of the nodes and the ports on which the nodes will listen for incoming
# connections. The third section contains a list of tokens and the paths which they are required to use to
# traverse through the system.
#
#
# Number of nodes and netID
# 
# The first uncommented line shall consist of an integer followed by a string. The integer shall be the number of
# nodes in the system (hereafter referred to as n), and the string shall be the netID used to login to the dcXX
# machines.
#
# CLARIFICATION 9/14/2015: This NetID should be used to login to the dcXX machines. It is *NOT* the NetID which 
# should be appear in the output file.
#
5 pxp142030

# Location of each node
#
# Format is:
# <Identifier> <Hostname> <Port>
# 
# Each node shall have exactly one line in this section. Each line shall start with a unique ID for the node. Nodes
# shall be numbered by integers in the range [0, n-1]. The first token shall be an integer, which consists of the 
# unique ID for the node. The second shall be a string, which is is the hostname on which your program for the node
# shall be hosted. The third token shall be the port on which the node listens for incoming connections. Each of
# these three tokens shall be separated by one or more whitespace characters (\s*). 
#
0 dc19 3332
1 dc29 5678
2 dc39 5231
3 dc37 2311
4 dc17 3124

# Token paths
# Format is:
# <Identifier> <Whitespace delimited list of nodes to be visited (excluding endpoint)>
# 
# The first token shall be the unique ID of the node for this path. Following the ID shall be a whitespace delimited
# (\s*) list of integers describing node ids on the path which the token should take. There are no constraints on the
# length of any path, or the number of times which a node may be visited. The first node in the path shall the first
# destination for the token, the second node on the path shall be the second destination for the token, etc. After
# visiting all of the nodes on this path, the token should be sent to the node which created it. See the example
# config lines below and the path which the token should take in the comments.
#
# WARNING: There may be a large number of tokens in this section. The number of tokens assigned to each node is
# arbitrary. Some nodes may be asked to generate zero tokens. Some nodes may be asked to generate more than one
# token. In case a node is required to generate multiple tokens, the order in which tokens must be generated is
# unspecified.
# 
0 1 2 3 4 2 3 4      #  0 -> 1 -> 2 -> 3 -> 4 -> 0
1 3 4 2 1 2 3      #  1 -> 3 -> 4 -> 2 -> 1
2 1 0 2 0 0 1 1       #  2 -> 1 -> 0 -> 2
2 3            #  2 -> 3 -> 2
1              #  1 -> 1
3 0 3 4 2 4 2  #  3 -> 0 -> 3 -> 4 -> 2 -> 4 -> 2 -> 3
4 4 3 2 1 0 4 4 3 3 3 4 1 2 1 3
0 3 1 0 4 2 0 3 1 4 0 2 3 3 0
2 1 0 1 1 3 0 3 0 1 4
1 2 0 1 2 3 2 0
3 2 1 2
3 4 1 2 0 2 3 1 4 0
4
3 3 3 0 2 1 4 1 0 2 1 4 3
1
0
4 1 2 1 2 0 1 2 3 4 1 2 0 2 3 1 0 4
0
1
2 4
1 3
1 2 3 4 0 4 3 2 1 0
2 1 2 0
2 2 2 2 2 2 2 4
3 4 2 1 2 0 1 2 4
3 0 2 1 4 2 0 1 3
4 2 0 1 3 2 0 1 4 2
4 2 0 1 2 3 2 0 1 4 1 0 2 3 0 1 4 0 2 0 0 3 2 0 1 0 2